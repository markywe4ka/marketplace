import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useCart } from '../context/CartContext';
import api from '../services/api';
import '../styles/CartPage.css';

const CartPage = () => {
  const { cart, removeFromCart, updateQuantity, clearCart } = useCart();
  const navigate = useNavigate();
  
  // State –¥–ª—è –∫—É–ø–æ–Ω–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏
  const [couponCode, setCouponCode] = useState('');
  const [couponApplied, setCouponApplied] = useState(false);
  const [couponDiscount, setCouponDiscount] = useState(0);
  const [shippingMethod, setShippingMethod] = useState('standard');
  
  // State –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Å API
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [cartItems, setCartItems] = useState([]);

  // –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Ç–æ–¥–∞
  const shippingCosts = {
    standard: 300,
    express: 600,
    pickup: 0
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ API
  useEffect(() => {
    const fetchCart = async () => {
      try {
        setLoading(true);
        
        // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –∏–∑ API
        try {
          const response = await api.cart.getCart();
          setCartItems(response.items || []);
        } catch (apiError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ API:', apiError);
          // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
          setCartItems(cart);
        }
        
        setLoading(false);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ—Ä–∑–∏–Ω—ã:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        setLoading(false);
      }
    };
    
    fetchCart();
  }, [cart]);
  
  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
  const calculateSubtotal = () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –∏–ª–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã
    const itemsToCalculate = cartItems.length > 0 ? cartItems : cart;
    return itemsToCalculate.reduce((sum, item) => sum + (item.price * (item.quantity || 1)), 0);
  };
  
  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞
  const calculateTotal = () => {
    const subtotal = calculateSubtotal();
    const shipping = shippingCosts[shippingMethod];
    const discount = couponApplied ? couponDiscount : 0;
    
    return subtotal + shipping - discount;
  };
  
  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫—É–ø–æ–Ω–∞
  const applyCoupon = async () => {
    // –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫—É–ø–æ–Ω —á–µ—Ä–µ–∑ API
    try {
      const response = await api.cart.applyCoupon(couponCode);
      setCouponDiscount(response.discount);
      setCouponApplied(true);
      alert(`–ö—É–ø–æ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω! –°–∫–∏–¥–∫–∞ ${response.discount} ‚ÇΩ`);
    } catch (apiError) {
      console.error('–û—à–∏–±–∫–∞ API –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∫—É–ø–æ–Ω–∞:', apiError);
      
      // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
      if (couponCode.toUpperCase() === 'DISCOUNT10') {
        const discount = Math.round(calculateSubtotal() * 0.1); // 10% —Å–∫–∏–¥–∫–∞
        setCouponDiscount(discount);
        setCouponApplied(true);
        alert('–ö—É–ø–æ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω! –°–∫–∏–¥–∫–∞ 10%');
      } else if (couponCode.toUpperCase() === 'FREESHIP') {
        setCouponDiscount(shippingCosts[shippingMethod]);
        setCouponApplied(true);
        alert('–ö—É–ø–æ–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω! –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞');
      } else {
        alert('–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫—É–ø–æ–Ω');
      }
    }
  };
  
  // –û—á–∏—Å—Ç–∫–∞ –∫—É–ø–æ–Ω–∞
  const clearCoupon = async () => {
    try {
      // –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –∫—É–ø–æ–Ω —á–µ—Ä–µ–∑ API
      await api.cart.removeCoupon();
    } catch (apiError) {
      console.error('–û—à–∏–±–∫–∞ API –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫—É–ø–æ–Ω–∞:', apiError);
      // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    }
    
    // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setCouponCode('');
    setCouponApplied(false);
    setCouponDiscount(0);
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
  const handleQuantityChange = async (itemId, newQuantity) => {
    if (newQuantity > 0 && newQuantity <= 10) {
      try {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ API
        try {
          await api.cart.updateCartItem(itemId, newQuantity);
        } catch (apiError) {
          console.error('–û—à–∏–±–∫–∞ API –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞:', apiError);
          // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        updateQuantity(itemId, newQuantity);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞');
      }
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  const handleRemoveItem = async (itemId) => {
    try {
      // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ API
      try {
        await api.cart.removeFromCart(itemId);
      } catch (apiError) {
        console.error('–û—à–∏–±–∫–∞ API –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', apiError);
        // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
      }
      
      // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã
      removeFromCart(itemId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
  const handleClearCart = async () => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?')) {
      try {
        // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É —á–µ—Ä–µ–∑ API
        try {
          await api.cart.clearCart();
        } catch (apiError) {
          console.error('–û—à–∏–±–∫–∞ API –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã:', apiError);
          // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –æ—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
        }
        
        // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
        clearCart();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã');
      }
    }
  };
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞
  const handleCheckout = () => {
    navigate('/checkout');
  };
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (loading) {
    return (
      <div className="cart-page">
        <div className="container">
          <h1 className="page-title">–ö–æ—Ä–∑–∏–Ω–∞</h1>
          <div className="loading">
            <div className="loading-spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã...</p>
          </div>
        </div>
      </div>
    );
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  if (error) {
    return (
      <div className="cart-page">
        <div className="container">
          <h1 className="page-title">–ö–æ—Ä–∑–∏–Ω–∞</h1>
          <div className="error-message">
            <p>{error}</p>
            <button onClick={() => window.location.reload()}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
          </div>
        </div>
      </div>
    );
  }
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–∏–∑ API –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã)
  const cartData = cartItems.length > 0 ? cartItems : cart;
  
  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
  if (cartData.length === 0) {
    return (
      <div className="cart-page">
        <div className="container">
          <h1 className="page-title">–ö–æ—Ä–∑–∏–Ω–∞</h1>
          
          <div className="empty-cart">
            <div className="empty-cart-icon">üõí</div>
            <h2>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <p>–ü–æ—Ö–æ–∂–µ, –≤—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É</p>
            <Link to="/" className="btn">
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
            </Link>
          </div>
        </div>
      </div>
    );
  }
  
  return (
    <div className="cart-page">
      <div className="container">
        <h1 className="page-title">–ö–æ—Ä–∑–∏–Ω–∞</h1>
        
        <div className="cart-container">
          <div className="cart-items">
            {/* –®–∞–ø–∫–∞ —Ç–∞–±–ª–∏—Ü—ã */}
            <div className="cart-header">
              <div className="header-product">–¢–æ–≤–∞—Ä</div>
              <div className="header-price">–¶–µ–Ω–∞</div>
              <div className="header-quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</div>
              <div className="header-total">–í—Å–µ–≥–æ</div>
              <div className="header-remove"></div>
            </div>
            
            {/* –¢–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ */}
            {cartData.map(item => (
              <div className="cart-item" key={`${item.id || item._id}-${item.color}-${item.size}`}>
                <div className="item-product">
                  <div className="item-image">
                    <img 
                      src={item.image || (item.images && item.images.length > 0 ? item.images[0] : '/placeholder.jpg')} 
                      alt={item.name} 
                    />
                  </div>
                  <div className="item-details">
                    <h3 className="item-name">{item.name}</h3>
                    <div className="item-meta">
                      {item.color && (
                        <div className="item-color">
                          <span className="meta-label">–¶–≤–µ—Ç:</span> 
                          <span 
                            className="color-dot" 
                            style={{ backgroundColor: item.color }}
                          ></span>
                        </div>
                      )}
                      {item.size && (
                        <div className="item-size">
                          <span className="meta-label">–†–∞–∑–º–µ—Ä:</span> {item.size}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
                
                <div className="item-price">
                  {item.price.toLocaleString('ru-RU')} ‚ÇΩ
                </div>
                
                <div className="item-quantity">
                  <div className="quantity-control">
                    <button 
                      className="quantity-btn minus"
                      onClick={() => handleQuantityChange(item.id || item._id, (item.quantity || 1) - 1)}
                      disabled={(item.quantity || 1) <= 1}
                    >
                      ‚àí
                    </button>
                    <input 
                      type="number" 
                      min="1" 
                      max="10"
                      value={item.quantity || 1}
                      onChange={(e) => handleQuantityChange(item.id || item._id, parseInt(e.target.value))}
                      className="quantity-input"
                    />
                    <button 
                      className="quantity-btn plus"
                      onClick={() => handleQuantityChange(item.id || item._id, (item.quantity || 1) + 1)}
                      disabled={(item.quantity || 1) >= 10}
                    >
                      +
                    </button>
                  </div>
                </div>
                
                <div className="item-total">
                  {((item.price * (item.quantity || 1))).toLocaleString('ru-RU')} ‚ÇΩ
                </div>
                
                <div className="item-remove">
                  <button 
                    className="remove-btn"
                    onClick={() => handleRemoveItem(item.id || item._id)}
                  >
                    ‚úñ
                  </button>
                </div>
              </div>
            ))}
            
            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ—Ä–∑–∏–Ω–æ–π */}
            <div className="cart-actions">
              <button 
                className="clear-cart-btn"
                onClick={handleClearCart}
              >
                –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
              </button>
              <Link to="/" className="continue-shopping-btn">
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
              </Link>
            </div>
          </div>
          
          {/* –ò—Ç–æ–≥–∏ –∫–æ—Ä–∑–∏–Ω—ã */}
          <div className="cart-summary">
            <h2 className="summary-title">–ò—Ç–æ–≥–æ</h2>
            
            <div className="summary-row">
              <div className="summary-label">–¢–æ–≤–∞—Ä—ã:</div>
              <div className="summary-value">{calculateSubtotal().toLocaleString('ru-RU')} ‚ÇΩ</div>
            </div>
            
            {/* –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
            <div className="shipping-methods">
              <h3 className="methods-title">–î–æ—Å—Ç–∞–≤–∫–∞</h3>
              
              <div className="method-option">
                <input 
                  type="radio" 
                  id="standard-shipping" 
                  name="shipping" 
                  value="standard"
                  checked={shippingMethod === 'standard'}
                  onChange={() => setShippingMethod('standard')}
                />
                <label htmlFor="standard-shipping">
                  <span className="method-name">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</span>
                  <span className="method-cost">{shippingCosts.standard} ‚ÇΩ</span>
                </label>
                <div className="method-description">2-4 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è</div>
              </div>
              
              <div className="method-option">
                <input 
                  type="radio" 
                  id="express-shipping" 
                  name="shipping" 
                  value="express"
                  checked={shippingMethod === 'express'}
                  onChange={() => setShippingMethod('express')}
                />
                <label htmlFor="express-shipping">
                  <span className="method-name">–≠–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∞</span>
                  <span className="method-cost">{shippingCosts.express} ‚ÇΩ</span>
                </label>
                <div className="method-description">1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è</div>
              </div>
              
              <div className="method-option">
                <input 
                  type="radio" 
                  id="pickup" 
                  name="shipping" 
                  value="pickup"
                  checked={shippingMethod === 'pickup'}
                  onChange={() => setShippingMethod('pickup')}
                />
                <label htmlFor="pickup">
                  <span className="method-name">–°–∞–º–æ–≤—ã–≤–æ–∑</span>
                  <span className="method-cost">{shippingCosts.pickup} ‚ÇΩ</span>
                </label>
                <div className="method-description">–ò–∑ –º–∞–≥–∞–∑–∏–Ω–∞</div>
              </div>
            </div>
            
            {/* –ö—É–ø–æ–Ω */}
            <div className="coupon-section">
              <h3 className="methods-title">–ö—É–ø–æ–Ω</h3>
              
              {couponApplied ? (
                <div className="applied-coupon">
                  <div className="coupon-info">
                    <div className="coupon-code">{couponCode.toUpperCase()}</div>
                    <div className="coupon-discount">-{couponDiscount.toLocaleString('ru-RU')} ‚ÇΩ</div>
                  </div>
                  <button 
                    className="remove-coupon-btn"
                    onClick={clearCoupon}
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              ) : (
                <div className="coupon-form">
                  <input 
                    type="text" 
                    className="coupon-input"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫—É–ø–æ–Ω–∞"
                    value={couponCode}
                    onChange={(e) => setCouponCode(e.target.value)}
                  />
                  <button 
                    className="coupon-btn"
                    onClick={applyCoupon}
                    disabled={couponCode.trim() === ''}
                  >
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                  </button>
                </div>
              )}
              
              <p className="coupon-tip">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫—É–ø–æ–Ω—ã: DISCOUNT10, FREESHIP
              </p>
            </div>
            
            {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ */}
            <div className="total-section">
              <div className="summary-row subtotal">
                <div className="summary-label">–ü–æ–¥—ã—Ç–æ–≥:</div>
                <div className="summary-value">{calculateSubtotal().toLocaleString('ru-RU')} ‚ÇΩ</div>
              </div>
              
              <div className="summary-row shipping">
                <div className="summary-label">–î–æ—Å—Ç–∞–≤–∫–∞:</div>
                <div className="summary-value">{shippingCosts[shippingMethod].toLocaleString('ru-RU')} ‚ÇΩ</div>
              </div>
              
              {couponApplied && (
                <div className="summary-row discount">
                  <div className="summary-label">–°–∫–∏–¥–∫–∞:</div>
                  <div className="summary-value discount-value">-{couponDiscount.toLocaleString('ru-RU')} ‚ÇΩ</div>
                </div>
              )}
              
              <div className="summary-row total">
                <div className="summary-label">–ò—Ç–æ–≥–æ:</div>
                <div className="summary-value">{calculateTotal().toLocaleString('ru-RU')} ‚ÇΩ</div>
              </div>
              
              <button 
                className="checkout-btn"
                onClick={handleCheckout}
              >
                –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é
              </button>
              
              <div className="secure-checkout">
                <div className="secure-icon">üîí</div>
                <div className="secure-text">–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CartPage;